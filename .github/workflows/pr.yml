name: Pull Request Test Suite

on:
  pull_request: {}

env:
  AUTOINSTALL: true
  AWS_ACCESS_KEY_ID: "dummy"
  AWS_SECRET_ACCESS_KEY: "dummy"
  CONTAINER_TOOL: "docker"
  RUST_BACKTRACE: full
  RUST_TEST_THREADS: 1
  TEST_LOG: vector=debug
  VERBOSE: true
  CI: true
  PROFILE: debug

jobs:
  cancel-previous:
    name: Cancel redundant jobs
    runs-on: ubuntu-20.04
    timeout-minutes: 3
    if: github.ref != 'refs/heads/master'
    steps:
      - uses: styfle/cancel-workflow-action@0.5.0
        with:
          access_token: ${{ secrets.GITHUB_TOKEN }}

  test-windows:
    name: Unit - Windows
    # Full CI suites for this platform were only recently introduced.
    # Some failures are permitted until we can properly correct them.
    continue-on-error: true
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
      - run: |
          $ErrorActionPreference = 'Continue'

          $sys = Get-CmiInstance -Class Win32_Computersystem
          $sys.AutomaticManagedPagefile = $false
          Set-CimInstance -InputObject $sys

          $Pagefile = Get-CmiInstance -Class Win32_PagefileSetting | Where-Object {$_.name -eq “C:\pagefile.sys”}
          $Pagefile.InitialSize = 20000
          $Pagefile.MaximumSize = 80000
          Set-CimInstance -InputObject $PageFile

          $Pagefile = Get-CmiInstance -Class Win32_PagefileSetting
          $pagefile.Name = “D:\pagefile.sys”
          $pagefile.Caption = “D:\pagefile.sys”
          $pagefile.Description = “’pagefile.sys’ @ D:\”
          $pagefile.SettingID =”pagefile.sys @ D:”
          $pagefile.InitialSize = 20000
          $pagefile.MaximumSize = 80000
          Set-CimInstance -InputObject $pagefile

          Get-CimInstance -Class CIM_LogicalDisk
          Get-CimInstance -Class Win32_PageFileUsage | Select-Object *
          Get-CimInstance -Class Win32_Pagefile | Select-Object *
          (Get-CmiInstance -Class Win32_Pagefile) –eq $null

          exit 0
      - env:
          RUSTFLAGS: "-D warnings"
        run: |
          $ErrorActionPreference = 'Continue'
          cargo test --no-fail-fast --no-default-features --features default-msvc
          exit 0
        shell: powershell -Command "& '{0}'"
      - run: |
          $ErrorActionPreference = 'Continue'
          Get-CimInstance -Class CIM_LogicalDisk
          Get-CimInstance -Class Win32_PageFileUsage | Select-Object *
          exit 0
